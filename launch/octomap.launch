
<!-- 
  Example launch file for octomap_server mapping: 
  Listens to incoming PointCloud2 data and incrementally builds an octomap. 
  The data is sent out in different representations. 
  Copy this file into your workspace and adjust as needed, see
  www.ros.org/wiki/octomap_server for details  
-->
<launch>
	<node pkg="octomap_server" type="octomap_server_node" name="octomap_server" output="screen">
		<param name="resolution" value="0.25" />
		
		<!-- fixed map frame (set to 'map' if SLAM or localization running!)
    <param name="base_frame_id" type="string" value="map" /> -->
		<param name="latch" type="bool" value="true" />
		<param name="startup_delay" type="double" value="8" />
		
		<!-- maximum range to integrate (speedup!) -->
    <!-- <param name="sensor_model/max_range" value="-1" /> -->
		
		<!-- data source to integrate (PointCloud2) -->
    <remap from="cloud_in" to="/zed/point_cloud/cloud_registered" />
	
	</node>
</launch>
